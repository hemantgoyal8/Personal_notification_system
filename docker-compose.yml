version: '3.8'
services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # AMQP
      - "15672:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: notifications
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/notifications
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    ports:
      - "8001:8001"

  notification_service:
    build:
      context: ./notification_service
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - rabbitmq
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/notifications
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      NOTIFICATION_QUEUE: notification_queue
      NOTIFICATION_EVENTS_EXCHANGE: notification_exchange
      BINDING_KEY: ""
    ports:
      - "8002:8002"

  scheduler_service:
    build:
      context: ./scheduler_service
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    # no ports (internal worker)

  graphql_gateway:
    build:
      context: ./graphql_gateway
      dockerfile: Dockerfile
    depends_on:
      - user_service
      - notification_service
    environment:
      USER_SERVICE_URL: http://user_service:8001
      NOTIFICATION_SERVICE_URL: http://notification_service:8002
    ports:
      - "8000:8000"

volumes:
  postgres_data:

networks:
  default:
    driver: bridge